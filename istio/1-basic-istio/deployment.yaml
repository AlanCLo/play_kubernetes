---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blah-deployment
spec:
  selector:
    matchLabels:
      app: blah-pods
  replicas: 1
  template:
    metadata:
      labels:
        app: blah-pods
        version: v1
    spec:
      containers:
        - name: blah-web
          image: blah-webapp:v1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blah-deployment-new
spec:
  selector:
    matchLabels:
      app: blah-pods
  replicas: 1
  template:
    metadata:
      labels:
        app: blah-pods
        version: v2
    spec:
      containers:
        - name: blah-web
          image: blah-webapp:v2
---
apiVersion: v1
kind: Service
metadata:
  name: blah-service
spec:
  selector:
    app: blah-pods
  ports:
    - name: http
      port: 80
  type: ClusterIP
      #nodePort: 31080
  #type: NodePort
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: blah-gateway
spec:
  selector:
    istio: ingressgateway  # default istio gateway deployment
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - "*"  # domain name of external website
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: blah-virtualservice
  namespace: default
spec:
  hosts:
    - "*"  # who are we applying this to
  gateways:
    - blah-gateway # gateways we use to get request from outside world
  http:
    - route:
        - destination:
            host: blah-service.default.svc.cluster.local
            subset: blah-v1
          weight: 50
        - destination:
            host: blah-service.default.svc.cluster.local
            subset: blah-v2
          weight: 50
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: blah-destinationrule
  namespace: default
spec:
  host: blah-service.default.svc.cluster.local
  subsets:
    - name: blah-v1
      labels:
        version: v1
    - name: blah-v2
      labels:
        version: v2

